import React, { useState, useEffect } from "react";
import styled from "@emotion/styled";
import Cookies from "js-cookie";
import axios from "axios";
/**
 * `<NaN>` ('검사 진행 페이지')
 * - [Open in Figma](https://figma.com/file/NlD9D8mc0GTNdluwALGs8v?node-id=78:509)
 * - [Open in Grida](https://code.grida.co/files/NlD9D8mc0GTNdluwALGs8v?node=78:509)
 *
 *
 * ---
 * @example
 * ```tsx
 * import React from "react";
 *
 * export default function () {
 *   return (
 *     <>
 *       👇 instanciate widget like below. 👇
 *       <NaN/>
 *     </>
 *   )
 * }
 * ```
 * ---
 * @params {any} props - this widget does not requires props. you can pass custom dynamic props to the widget as you want (on typescript, it will raise type check issues).
 * ---
 * @preview
 * ![](https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/faa161ac-da71-4dc3-90c3-35c6c69035b5)
 * ---
 * @remarks
 * @see {@link https://grida.co/docs} for more information.
 * ---
 * Code generated by grida.co | engine 0.0.1 (Apache-2.0) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*
 *
 *
 * ![Made with Grida](https://bridged-service-static.s3.us-west-1.amazonaws.com/branding/logo/32.png)
 * <!-- Info: Please do not remove this comment unless intended. removing this section will break grida integrations. -->
 * <!-- grida.meta.widget_declaration | engine : 0.0.1 | source : figma://NlD9D8mc0GTNdluwALGs8v/78:509 -->
 */

// 백엔드로 결과를 전송하는 함수
const sendResultsToBackend = async (results) => {
  try {
    const response = await axios.post(
      "http://localhost:3001/api/polygon/create",
      results,
      {
        withCredentials: true,
      }
    );
    console.log("Results sent to backend:", response.data);
    Cookies.set("polygon_id", response.data.polygon_id, { path: "/" });
  } catch (error) {
    console.error("Error sending results to backend:", error);
  }
};

export function ExaminationProgress() {
  const [questionsData, setQuestionsData] = useState([]);
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [results, setResults] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(
          "http://localhost:3001/api/polygon/questions",
          {
            withCredentials: true,
          }
        );
        const questionElements = response.data.elements;
        setQuestionsData(questionElements);
        console.log(questionElements); // 업데이트된 데이터를 출력합니다.
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchData(); // fetchData 함수를 호출하여 데이터를 가져옵니다.
  }, []);

  const handleYesButtonClick = () => {
    // 현재 질문의 id 값을 가져옴
    const currentQuestionId = questionsData[currentQuestionIndex].id;

    // 현재 질문의 index를 찾음
    const questionIndex = questionsData.findIndex(
      (question) => question.id === currentQuestionId
    );

    // 현재 질문의 score를 1 증가시킴
    if (questionIndex !== -1) {
      const updatedQuestionsData = [...questionsData];
      if (isNaN(updatedQuestionsData[questionIndex].score)) {
        updatedQuestionsData[questionIndex].score = 0; // 초기화
      }
      updatedQuestionsData[questionIndex].score += 1;

      // 콘솔에 id와 score의 변화를 출력
      console.log(
        `Question ID: ${currentQuestionId}, Score: ${updatedQuestionsData[questionIndex].score}`
      );

      // 여기에서 업데이트된 질문 데이터를 상태로 업데이트하는 함수가 필요합니다.
      setQuestionsData(updatedQuestionsData);
    }
    // 현재 질문에 대한 결과를 결과 배열에 추가
    if (questionIndex !== -1) {
      const updatedResults = [...results];
      const existingResultIndex = updatedResults.findIndex(
        (result) => result.id === currentQuestionId
      );
      if (existingResultIndex !== -1) {
        updatedResults[existingResultIndex].score += 1;
      } else {
        updatedResults.push({ id: currentQuestionId, score: 1 });
      }
      setResults(updatedResults);
    }
  };

  const handleNoButtonClick = () => {};

  const SubmitButton = styled.button`
    /* Add your styling for the submit button here */
  `;
  const handleSubmitButtonClick = async () => {
    if (currentQuestionIndex < questionsData.length - 1) {
      setCurrentQuestionIndex(currentQuestionIndex + 1);
    } else {
      try {
        console.log(results);
        await sendResultsToBackend(results);

        window.location.href = "/main";
      } catch (error) {
        console.error("Error while sending results:", error);
        // 에러 메시지를 사용자에게 표시할 수도 있습니다.
        // 예를 들어, 사용자에게 알림을 보여줄 수 있습니다.
        alert("결과를 전송하는 중에 오류가 발생했습니다. 다시 시도해주세요.");
      }
    }
  };
  return (
    <RootWrapperNaN>
      <Frame50>
        <Frame1>
          <Group54>
            <IconsBasicProject
              src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/b22f8c04-e428-4e05-9626-af68dbe6a402"
              alt="icon"
            />
            <NaN_0002>나의 도형</NaN_0002>
          </Group54>
          <Group53>
            <IconsBasicChat
              src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/1838a0a3-0265-4313-83d5-3cc95dd0feb9"
              alt="icon"
            />
            <NaN_0003>고민 나눔</NaN_0003>
          </Group53>
          <Group52>
            <IconlyRegularTwoToneHome>
              <Home>
                <Home_0001
                  src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/14ed7b87-05fe-481c-b401-74745b0d5918"
                  alt="image of Home"
                />
              </Home>
            </IconlyRegularTwoToneHome>
            <NaN_0004>홈</NaN_0004>
          </Group52>
          <Group51>
            <IconsBasicStar
              src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/2879759f-2160-49b0-96b6-f40d5d1901c7"
              alt="icon"
            />
            <NaN_0005>칭찬 일기</NaN_0005>
          </Group51>
          <Group50>
            <NaN_0006>집중 기록</NaN_0006>
            <IconsBasicTime
              src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/84688497-302e-4348-95e7-bc07f62808fb"
              alt="icon"
            />
          </Group50>
        </Frame1>
      </Frame50>
      <Frame50_0001>
        <IconsBasicUser
          src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/d1540fa1-9972-429c-b1cd-cb872a3d27b5"
          alt="icon"
        />
        <NaN_0007>검사 진행</NaN_0007>
      </Frame50_0001>
      <Group24>
        <Rectangle34 />
        <Typography>
          <Typography_0001>오각형 검사</Typography_0001>
        </Typography>
      </Group24>
      <Typography_0002>
        <Typography_0003>
          <Typography_0004>
            *자신의 하루 만족도를 알아볼 수 있도록 솔직하게 답변하세요.
          </Typography_0004>
        </Typography_0003>
      </Typography_0002>
      <Group33>
        {questionsData.length > 0 &&
          currentQuestionIndex < questionsData.length && (
            <QuestionWrapper>
              <h3>{questionsData[currentQuestionIndex].element_name}</h3>
              <ul>
                {questionsData[currentQuestionIndex].question_strings.map(
                  (question, qIndex) => (
                    <li key={qIndex}>
                      {`${qIndex + 1}번째 질문: ${question}`}
                      <ButtonWrapper>
                        <Button onClick={handleYesButtonClick}>예</Button>
                        <Button onClick={handleNoButtonClick}>아니오</Button>
                      </ButtonWrapper>
                    </li>
                  )
                )}
              </ul>
              <SubmitButton onClick={handleSubmitButtonClick}>
                다음
              </SubmitButton>
            </QuestionWrapper>
          )}
      </Group33>
      <Vector xmlns="http://www.w3.org/2000/svg">
        <path
          fill="rgba(0, 0, 0, 0.64)"
          d="M0 7.50001C0 7.74737 0.118471 7.97494 0.333872 8.16294L7.4852 14.723C7.7006 14.911 7.92677 15 8.18525 15C8.71299 15 9.13302 14.6439 9.13302 14.1491C9.13302 13.9117 9.03609 13.6742 8.86377 13.5257L6.45127 11.2698L2.18633 7.6979L1.96015 8.18273L5.42811 8.38062L19.0523 8.38062C19.6123 8.38062 20 8.01452 20 7.50001C20 6.9855 19.6123 6.6194 19.0523 6.6194L5.42811 6.6194L1.96015 6.81729L2.18633 7.31202L6.45127 3.73022L8.86377 1.47427C9.03609 1.31596 9.13302 1.08839 9.13302 0.850923C9.13302 0.356201 8.71299 0 8.18525 0C7.92677 0 7.7006 0.0791558 7.46365 0.296834L0.333872 6.83708C0.118471 7.02507 0 7.25265 0 7.50001Z"
        />
      </Vector>
    </RootWrapperNaN>
  );
}

const ButtonWrapper = styled.div`
  margin-top: 20px;
`;

const Button = styled.button`
  margin-right: 10px;
  padding: 5px 10px;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;

  &:hover {
    background-color: #0056b3;
  }
`;

const QuestionWrapper = styled.div`
  margin-bottom: 20px;

  h3 {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  ul {
    list-style-type: none;
    padding: 0;
  }

  li {
    font-size: 14px;
    margin-bottom: 5px;
  }
`;

const RootWrapperNaN = styled.div`
  min-height: 100vh;
  background: rgb(255, 255, 255);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  position: relative;
`;

const Frame50 = styled.div`
  width: 360px;
  height: 52px;
  overflow: hidden;
  background: rgb(245, 239, 231);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  position: absolute;
  left: 0px;
  top: 748px;
`;

const Frame1 = styled.div`
  width: 360px;
  height: 52px;
  overflow: hidden;
  position: absolute;
  left: 0px;
  top: 0px;
`;

const Group54 = styled.div`
  width: 41px;
  height: 30px;
  position: absolute;
  left: 297px;
  top: 16px;
`;

const IconsBasicProject = styled.img`
  object-fit: cover;
  position: absolute;
  left: 10px;
  top: 0px;
  right: 10px;
  bottom: 11px;
`;

const NaN_0002 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 8px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 44px;
  position: absolute;
  left: 0px;
  top: 20px;
`;

const Group53 = styled.div`
  width: 36px;
  height: 32px;
  position: absolute;
  left: 233px;
  top: 14px;
`;

const IconsBasicChat = styled.img`
  width: 20px;
  height: 20px;
  object-fit: cover;
  position: absolute;
  left: 8px;
  top: 0px;
`;

const NaN_0003 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 8px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 39px;
  position: absolute;
  left: 0px;
  top: 22px;
`;

const Group52 = styled.div`
  width: 20px;
  height: 28px;
  position: absolute;
  left: 170px;
  top: 18px;
`;

const IconlyRegularTwoToneHome = styled.div`
  position: absolute;
  left: 0px;
  top: 0px;
  right: 0px;
  bottom: 11px;
`;

const Home = styled.div`
  width: 16px;
  height: 14px;
  position: absolute;
  left: 2px;
  top: 1px;
`;

const Home_0001 = styled.img`
  object-fit: cover;
  position: absolute;
  left: 0px;
  top: 0px;
  right: 0px;
  bottom: 0px;
`;

const NaN_0004 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 8px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 14px;
  position: absolute;
  left: 3px;
  top: 18px;
`;

const Group51 = styled.div`
  width: 36px;
  height: 30px;
  position: absolute;
  left: 92px;
  top: 16px;
`;

const IconsBasicStar = styled.img`
  width: 20px;
  height: 20px;
  object-fit: cover;
  position: absolute;
  left: 8px;
  top: 0px;
`;

const NaN_0005 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 8px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 39px;
  position: absolute;
  left: 0px;
  top: 20px;
`;

const Group50 = styled.div`
  width: 37px;
  height: 30px;
  position: absolute;
  left: 21px;
  top: 16px;
`;

const NaN_0006 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 8px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 40px;
  position: absolute;
  left: 0px;
  top: 20px;
`;

const IconsBasicTime = styled.img`
  width: 20px;
  height: 20px;
  object-fit: cover;
  position: absolute;
  left: 9px;
  top: 0px;
`;

const Frame50_0001 = styled.div`
  width: 360px;
  height: 54px;
  overflow: hidden;
  background: rgb(245, 239, 231);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  position: absolute;
  left: 0px;
  top: 0px;
`;

const IconsBasicUser = styled.img`
  width: 19px;
  height: 18px;
  object-fit: cover;
  position: absolute;
  left: 323px;
  top: 19px;
`;

const NaN_0007 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 18px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 103px;
  position: absolute;
  left: 130px;
  top: 16px;
`;

const Group24 = styled.div`
  width: 401px;
  height: 90px;
  position: absolute;
  left: -21px;
  top: 121px;
`;

const Rectangle34 = styled.div`
  width: 401px;
  height: 90px;
  background: rgb(245, 239, 231);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  border: solid 0px black;
  border-radius: 20px;
  position: absolute;
  left: 0px;
  top: 0px;
  filter: blur(4px);
`;

const Typography = styled.div`
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
  align-items: flex-start;
  gap: 10px;
  box-sizing: border-box;
  position: absolute;
  left: 148px;
  top: 31px;
  width: 121px;
`;

const Typography_0001 = styled.span`
  color: rgb(51, 51, 51);
  text-overflow: ellipsis;
  font-size: 18px;
  font-family: Poppins, sans-serif;
  font-weight: 900;
  text-align: center;
  width: 113px;
`;

const Typography_0002 = styled.div`
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
  align-items: center;
  position: absolute;
  left: 20px;
  top: 211px;
`;

const Typography_0003 = styled.div`
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
  align-items: flex-start;
  gap: 10px;
  box-sizing: border-box;
`;

const Typography_0004 = styled.span`
  color: rgb(51, 51, 51);
  text-overflow: ellipsis;
  font-size: 13px;
  font-family: Poppins, sans-serif;
  font-weight: 500;
  text-align: center;
`;

const Group33 = styled.div`
  width: 401px;
  height: 349px;
  position: absolute;
  left: -25px;
  top: 280px;
`;

const Rectangle40 = styled.div`
  width: 401px;
  height: 312px;
  background: rgb(244, 244, 244);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  border: solid 0px black;
  border-radius: 20px;
  position: absolute;
  left: 0px;
  top: 0px;
`;

const NaN_0008 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 18px;
  font-family: Poppins, sans-serif;
  font-weight: 500;
  text-align: center;
  width: 189px;
  min-height: 78px;
  position: absolute;
  left: 113px;
  top: 0px;
  height: 78px;
`;

const Group26 = styled.div`
  width: 283px;
  height: 95px;
  position: absolute;
  left: 63px;
  top: 190px;
`;

const Rectangle29 = styled.div`
  width: 283px;
  height: 95px;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  background: rgb(245, 239, 231);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  border: solid 0px black;
  border-radius: 20px;
  position: absolute;
  left: 0px;
  top: 0px;
  filter: blur(4px);
`;

const NaN_0009 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 15px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 242px;
  position: absolute;
  left: 29px;
  top: 34px;
`;

const Group34 = styled.div`
  width: 283px;
  height: 95px;
  position: absolute;
  left: 65px;
  top: 72px;
`;

const Rectangle41 = styled.div`
  width: 283px;
  height: 95px;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  background: rgb(255, 255, 255);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  border: solid 0px black;
  border-radius: 20px;
  position: absolute;
  left: 0px;
  top: 0px;
  filter: blur(4px);
`;

const NaN_0010 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 15px;
  font-family: Inter, sans-serif;
  font-weight: 400;
  text-align: center;
  width: 231px;
  position: absolute;
  left: 27px;
  top: 41px;
`;

const Group57 = styled.div`
  width: 107px;
  height: 23px;
  position: absolute;
  left: 151px;
  top: 326px;
`;

const Group25 = styled.div`
  width: 107px;
  height: 23px;
  position: absolute;
  left: 0px;
  top: 0px;
`;

const IconsBasicArrowLeft = styled.img`
  width: 20px;
  height: 20px;
  object-fit: cover;
  position: absolute;
  left: 0px;
  top: 0px;
`;

const IconsBasicArrowRight4 = styled.img`
  width: 20px;
  height: 20px;
  object-fit: cover;
  position: absolute;
  left: 87px;
  top: 0px;
`;

const _112 = styled.span`
  color: black;
  text-overflow: ellipsis;
  font-size: 18px;
  font-family: Poppins, sans-serif;
  font-weight: 500;
  text-align: center;
  width: 43px;
  min-height: 23px;
  position: absolute;
  left: 32px;
  top: 0px;
  height: 23px;
`;

const Vector = styled.svg`
  width: 20px;
  height: 15px;
  position: absolute;
  left: 16px;
  top: 22px;
  right: 324px;
  bottom: 763px;
`;
